#!/usr/bin/python
#Parra Arroyo Fernando Marcos
#20-03-17
#
#Sniffer de trafico TCP entrante
#
#Requerimientos
#	pip install scapy
#
#Uso:
#	python sniffer.py
	 
import socket
from struct import *
from scapy.all import *

#Se crea el socket para poder ver el trafico TCP entrante
s = socket.socket(socket.AF_INET, socket.SOCK_RAW, socket.IPPROTO_TCP)

#Se recibe el paquete
while True:
	packet = s.recvfrom(65565)
	packet = packet[0]

	#se toma la cabecera IP , es decir, los primeros 20 bytes
	ip_header = packet[0:20]
	#Se desempaqueta la cabecera
	iph = unpack('!BBHHHBBH4s4s' , ip_header)

	#Se obtiene la version y tamano de cabecera
	version_ihl = iph[0]
	version = version_ihl >> 4
	ihl = version_ihl & 0xF

   	#Se obtiene el valor del TTL
	ttl = iph[5]
	#Se obtiene el protocolo
	protocol = iph[6]
	#Se obtiene direcciones ip origen y destino
	s_addr = socket.inet_ntoa(iph[8]);
	d_addr = socket.inet_ntoa(iph[9]);
   
   	print "-----------------------------------------------------------------------------------------------------------------"
	print 'Version : ' + str(version) + ' IP Header Length : ' + str(ihl) + ' TTL : ' + str(ttl)+ ' Protocol : ' + str(protocol) + ' Source Address : ' + str(s_addr) + ' Destination Address : ' + str(d_addr)

   	#Se obtiene la cabecera TCP 
	tcp_header = packet[20:40]
	
   
	#Se desempaqueta la cabecera
	tcph = unpack('!HHLLBBHHH' , tcp_header)   
	#Se optienen los puertos origen y destino
	source_port = tcph[0]
	dest_port = tcph[1]
	#Se obiene el numero de secuencia
	sequence = tcph[2]
	acknowledgement = tcph[3]
	doff_reserved = tcph[4]
	tcph_length = doff_reserved >> 4
   
	print 'Source Port : ' + str(source_port) + ' Dest Port : ' + str(dest_port) + ' Sequence Number : ' + str(sequence) + ' Acknowledgement : ' + str(acknowledgement) + ' TCP header length : ' + str(tcph_length)   	


	h_size = ihl * 4 + tcph_length * 4
	data_size = len(packet) - h_size
   
	#Se obtiene los datos del paquete
	data = packet[data_size:]

	print "\n\t\t\t\t DATA DUMP"
	print "IP HEADER:"
	hexdump(ip_header)
	print "TCP HEADER:"
   	hexdump(tcp_header)
   	print "DATA PAYLOAD:"
   	data=data[40:]
	hexdump(data)
	print "\n"