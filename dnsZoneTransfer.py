#!/usr/bin/python
#Parra Arroyo Fernando Marcos
#14-03-17
#
#Descripcion:
#Programa que recibe como parametro un archivo con dominios y genera como salida
#un archivo con la zona DNS del dominio, en caso de que se pueda obtener
#
#Requerimientos: modulo dnspython
#	pip install dnspython
#
#Formato de archivo:
#	ole.com.ar
#	google.com
#	unam.com
#
#Ejemplos de uso
#	python dnsZoneTransfer.py dns.txt
#
import dns.resolver
import dns.query
import dns.zone
import sys

#verificacion de parametros
if len(sys.argv) != 2:
	sys.exit("Uso: python dnsZoneTransfer.py archivo")
#abriendo archivo en entrada
try:
	infile = open(sys.argv[1], 'r')
except:
	sys.exit("Error al abrir el archivo: "+sys.argv[1])
#abriendo archivo de salida
try:
	outfile = open('resultados.txt', 'w') 
except:
	sys.exit("Error al abir el archivo resultados.txt")


for line in infile:
	outfile.write("+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n")
	dominio=line.strip("\n")
	outfile.write("DOMINIO:" + dominio+"\n")
	#se obtienen los DNS autorizados para responder
	answers = dns.resolver.query(dominio,"NS")

	for rdata in answers:
		try:
			outfile.write("\t------------------------------------------------\n")
			outfile.write("\tAnalizando "+ str(rdata)+"\n\n")

			#se obtiene la zona dns del dominio
			z = dns.zone.from_xfr(dns.query.xfr(str(rdata),dominio))
			names = z.nodes.keys()	
			names.sort()
			for n in names:
				outfile.write("\t\t"+z[n].to_text(n)+"\n")
		except:
			outfile.write("\tLa transferencia de zona no esta disponible en "+str(rdata)+" en "+dominio+"\n")

print "Consulte el archivo resultados.txt"

infile.close()
outfile.close()