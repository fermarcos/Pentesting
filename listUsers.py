#!/usr/bin/python
#Parra Arroyo Fernando Marcos
#15-03-17
#
#Este programa recibe como parametro una ip y un archivo con una lista
#de posibles usuarios validos, y regresa como salida en pantala
#los usuarios validos
#
#Formato del archivo de usuarios:
#	root
#	admin
#	msfadmin
#	becario
#
#Ejemplo de uso
#	python listUsers.py 192.168.95.11 users.txt
#

import socket
import sys
import re

#verificacion de parametros
if len(sys.argv) != 3:
	sys.exit("Uso: python listUsers.py IP_objetivo archivoUsuarios")
#abriendo archivo en entrada
try:
	infile = open(sys.argv[2], 'r')
except:
	sys.exit("Error al abrir el archivo: "+sys.argv[2])
#verificacion de la ip
try:
	socket.inet_aton(sys.argv[1])
except:
	sys.exit("IP no valida")


ip=sys.argv[1]
puerto=25
print "Conectando a ",ip,":",puerto
s = socket.socket()
s.settimeout(60)

#conexion a la ip proporcionada por el puerto 25
try:
	s.connect((ip,puerto))
	recv_data = s.recv(512)
	print "Conexion exitosa\n",recv_data
except:
	sys.exit("Error no se pudo establecer conexion")


for line in infile:
	user = line.rstrip('\n')
	#se verifica cada usuario contenido en el archivo
	datos = "VRFY "
	datos += user
	datos += "\n"
	#se manda el VRFY para cada usuario
	error = s.sendall(datos)
	if error:
		print "\nError: ", error
	else:
		try:
			#se guarda la respuesta
			recv_data = s.recv(512)
		except socket.timeout:
			print "Tiempo agotado ",user
	if recv_data:
		#se verifica el codigo de exito
		if re.match("252",recv_data):
			print "Usuario valido:",user,"\n"
	else:
		print "\nNo hay datos de respuesta"
infile.close()
s.close()