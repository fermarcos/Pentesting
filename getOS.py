#!/usr/bin/python
#Parra Arroyo Fernando Marcos
#14-03-17
#
#Este programa recibe como paramero una ip o un nombre de dominio 
#y obtiene el fingerprint de un sistema operativo con base en el TTL de un ping
#
#Ejemplo de uso:
#	python getOs.py 8.8.8.8
#	python getOS.py google.com	
#
import subprocess
import sys
import re

#Diccionario con valores de ttl y posibles sistemas operativos correspondientes
os = {}
os[1] = ["AIX, Dec Pathworks, HP-UX, OSF/, Stratus, VMS/Wollongong, Windows 5/98"]
os[2] = ["Linux Kernel 2.4/2.6, Google Linux,FreeBSD,Solaris"]
os[3] = ["Windows XP/7/vista/server 2008/server2003, VMS/UCX, VMS/Wollongong"]
os[4] = ["Solaris,AIX,Cisco IOS,OSX/iOS,OpenBSD,NetBSD,FreeBSD 3.4-4.0,"]

#verificacion de parametros
if len(sys.argv) != 2:
	sys.exit("Uso: python getOS.py [IP o dominio]")

#se hacen 3 pings para obtener el ttl
proc = subprocess.Popen(['ping', '-c', '3', sys.argv[1]],stdout=subprocess.PIPE)
stdout, stderr = proc.communicate()
#se verifica que el ping haya sido exitoso
if proc.returncode == 0:
	print "Los posibles sistemas operativos para "+sys.argv[1]+" son: "
	ttl = re.search(r'ttl=[0-9]{1,3}',stdout)
	parametro=ttl.group()
	ttl_value=parametro.split("=")
	ttl_os= int(ttl_value[1])

	if  ttl_os < 40:
		print "\t",os[1]
	elif ttl_os < 80:
		print "\t",os[2]
	elif ttl_os < 130:
		print "\t",os[3]
	elif ttl_os <= 255:
		print "\t",os[4]
	else:
		print "No se encontraron coincidencias para el ttl=", os
else:
	print "Error no se obtuvo respuesta de"+sys.argv[1]