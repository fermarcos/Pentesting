#!/usr/bin/python
#Parra Arroyo Fernando Marcos
#15-03-17
#
#Fingerprint usando tamano de ventana
#
#Entradas:
#	IP y puerto
#Salidas:
#	Sistema operativo basado en el tamano de ventana
#
#Requerimientos
#	pip install scapy
#

from scapy.all import *
import re


#verificacion de parametros
if len(sys.argv) != 3:
	sys.exit("Uso: python getOS_wSize.py ip puerto")
#verificacion de la ip
try:
	socket.inet_aton(sys.argv[1])
except:
	sys.exit("IP no valida")
#verificacion de los numeros de puerto
if(int(sys.argv[2])<0 or int(sys.argv[2])>65535):
	sys.exit("Error en numero de puerto, valores validos (0-65535)")

def getSize(ip,port):
	#se manda un paquete tcp a la direccion y puerto ingresados con la bandera SYN activada
	ans,unans = sr(IP(dst=ip)/TCP(dport=port,flags="S"))

	recv=ans[0]
	#Se buscra el parametro window en la respuesta
	win = re.search(r'window=[0-9]{1,5}',str(recv))
	parametro=win.group()
	win_value=parametro.split("=")
	size=int(win_value[1])
	return size

def getOS(win_size):
	print "------------------------------------------------"
	print "Tamano de ventana: ",win_size
	print "Posibles sistemas"
	if win_size == 5840 or win_size == 32120: print "\tLinux 2.2, Linux 2.4\n"
	elif win_size == 16384: print "\tOpenBSD, AIX 4.3, Windows 2000\n"
	elif win_size == 65535: print "\tFreeBSD\n"
	elif win_size == 8760: 	print "\tSolaris 7\n"
	elif win_size == 8192: 	print "\tWindows 95, Windows 98\n"
	elif win_size == 64240: print "\tWindows XP\n"

tam=getSize(sys.argv[1],int(sys.argv[2]))
if tam!=0: getOS(tam)
else: print "Sistema no encontrado, verifica IP y que el puerto este abierto"